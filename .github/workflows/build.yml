on: [ 'push', 'pull_request' ]

name: Build PHP Extensions

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  yasd:
    name: Build YASD
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '7.4', '8.0' ]
        alpine-version: [ '3.11', '3.12', '3.13', '3.14', '3.15' ]
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
      YASD_VERSION: "v0.3.9"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Yasd
        run: cd yasd && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/yasd') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: yasd/yasd-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: yasd-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream

  xlswriter:
    name: Build Xlswriter
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '8.0', '8.1', '8.2' ]
        alpine-version: [ '3.14', '3.15', '3.16', '3.17', '3.18', 'edge' ]
        exclude:
          - php-version: '8.2'
            alpine-version: '3.14'
          - php-version: '8.2'
            alpine-version: '3.15'
          - php-version: '8.2'
            alpine-version: '3.16'
          - php-version: '8.2'
            alpine-version: '3.17'
          - php-version: '8.1'
            alpine-version: '3.14'
          - php-version: '8.1'
            alpine-version: '3.15'
          - php-version: '8.0'
            alpine-version: '3.17'
          - php-version: '8.0'
            alpine-version: '3.18'
          - php-version: '8.0'
            alpine-version: 'edge'
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
      XLS_WRITER_VERSION: "1.5.5"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Xlswriter
        run: cd xlswriter && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/xlswriter') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: xlswriter/xlswriter-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: xlswriter-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream

  pgsql:
    name: Build PgSQL
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '7.4', '8.0' ]
        alpine-version: [ '3.11', '3.12', '3.13', '3.14', '3.15' ]
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
      SWOOLE_VERSION: "v4.6.1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build PgSQL
        run: cd pgsql && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/pgsql') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: pgsql/swoole_postgresql-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: swoole_postgresql-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream

  wxwork-finance-sdk:
    name: Build 企业微信会话 SDK
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '8.1', '8.2', '8.3' ]
        alpine-version: [ '3.16', '3.17', '3.18', '3.19', 'edge' ]
        exclude:
          - php-version: '8.3'
            alpine-version: '3.16'
          - php-version: '8.3'
            alpine-version: '3.17'
          - php-version: '8.3'
            alpine-version: '3.18'
          - php-version: '8.2'
            alpine-version: '3.16'
          - php-version: '8.2'
            alpine-version: '3.17'
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build WxWork Finance SDK
        run: cd wxwork-finance-sdk && ./build.sh
      - name: Release and Upload Assets
        if: ${{ startsWith(github.ref, 'refs/tags/wxwork-finance-sdk') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: wxwork-finance-sdk/wxwork-finance-sdk-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.zip
          asset_name: wxwork-finance-sdk-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.zip
          asset_content_type: application/octet-stream


